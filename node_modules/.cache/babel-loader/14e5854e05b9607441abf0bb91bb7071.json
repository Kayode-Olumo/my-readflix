{"ast":null,"code":"var _jsxFileName = \"/Users/kayodeolumo/Desktop/readflix-kayode/src/views/LibraryView.js\";\nimport React, { Component } from 'react';\nimport ShelfComponent from '../components/ShelfComponent';\nimport AddBookComponent from '../components/AddBookComponent';\nimport { getAll } from '../BooksAPI';\nexport default class LibraryView extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onHandleSearchChange = async evt => {\n      try {\n        const searchQuery = evt.target.value;\n        this.setState({\n          searchQuery\n        });\n\n        if (searchQuery.trim()) {\n          const searchResult = await search(searchQuery);\n\n          if (searchResult.error) {\n            this.setState({\n              searchBooks: []\n            });\n            return React.createElement(\"h1\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 17\n              },\n              __self: this\n            }, \"Sorry no books found\");\n          } else {\n            this.setState({\n              searchBooks: searchResult\n            });\n          }\n        } else {\n          this.setState({\n            searchBooks: []\n          });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const allBooks = await getAll();\n      this.props.updateAllBooks(allBooks);\n    } catch (error) {\n      console.error('issue with getting all books');\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          currentlyReading = _this$props.currentlyReading,\n          wantToRead = _this$props.wantToRead,\n          read = _this$props.read,\n          changeCategory = _this$props.changeCategory;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-books\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-books-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"MyReads\")), React.createElement(\"div\", {\n      className: \"list-books-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(ShelfComponent, {\n      category: \"Currently Reading\",\n      books: currentlyReading,\n      changeCategory: changeCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(ShelfComponent, {\n      category: \"Want to Read\",\n      books: wantToRead,\n      changeCategory: changeCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(ShelfComponent, {\n      category: \"Read\",\n      books: read,\n      changeCategory: changeCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))), React.createElement(AddBookComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/kayodeolumo/Desktop/readflix-kayode/src/views/LibraryView.js"],"names":["React","Component","ShelfComponent","AddBookComponent","getAll","LibraryView","onHandleSearchChange","evt","searchQuery","target","value","setState","trim","searchResult","search","error","searchBooks","console","log","componentDidMount","allBooks","props","updateAllBooks","render","currentlyReading","wantToRead","read","changeCategory"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAAQC,MAAR,QAAqB,aAArB;AAEA,eAAe,MAAMC,WAAN,SAA0BJ,SAA1B,CAAmC;AAAA;AAAA;;AAAA,SAC9CK,oBAD8C,GACvB,MAAMC,GAAN,IAAa;AAChC,UAAG;AACC,cAAMC,WAAW,GAAGD,GAAG,CAACE,MAAJ,CAAWC,KAA/B;AACA,aAAKC,QAAL,CAAc;AACVH,UAAAA;AADU,SAAd;;AAGA,YAAGA,WAAW,CAACI,IAAZ,EAAH,EAAsB;AAClB,gBAAMC,YAAY,GAAG,MAAMC,MAAM,CAACN,WAAD,CAAjC;;AACA,cAAGK,YAAY,CAACE,KAAhB,EAAsB;AAClB,iBAAKJ,QAAL,CAAc;AAAEK,cAAAA,WAAW,EAAE;AAAf,aAAd;AACA,mBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAP;AACH,WAHD,MAGK;AACD,iBAAKL,QAAL,CAAc;AAAEK,cAAAA,WAAW,EAAEH;AAAf,aAAd;AACH;AACJ,SARD,MAQK;AACD,eAAKF,QAAL,CAAc;AACVK,YAAAA,WAAW,EAAE;AADH,WAAd;AAGH;AAEJ,OAnBD,CAmBC,OAAMD,KAAN,EAAY;AACTE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH;AACJ,KAxB6C;AAAA;;AA0B9C,QAAMI,iBAAN,GAAyB;AACrB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMhB,MAAM,EAA7B;AACA,WAAKiB,KAAL,CAAWC,cAAX,CAA0BF,QAA1B;AACH,KAHD,CAGE,OAAML,KAAN,EAAa;AACXE,MAAAA,OAAO,CAACF,KAAR,CAAc,8BAAd;AACH;AACJ;;AAEDQ,EAAAA,MAAM,GAAE;AAAA,wBAC2D,KAAKF,KADhE;AAAA,UACIG,gBADJ,eACIA,gBADJ;AAAA,UACsBC,UADtB,eACsBA,UADtB;AAAA,UACkCC,IADlC,eACkCA,IADlC;AAAA,UACwCC,cADxC,eACwCA,cADxC;AAEJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AACI,MAAA,QAAQ,EAAC,mBADb;AAEI,MAAA,KAAK,EAAEH,gBAFX;AAGI,MAAA,cAAc,EAAEG,cAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,cAAD;AACI,MAAA,QAAQ,EAAC,cADb;AAEI,MAAA,KAAK,EAAEF,UAFX;AAGI,MAAA,cAAc,EAAEE,cAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAWI,oBAAC,cAAD;AACI,MAAA,QAAQ,EAAC,MADb;AAEI,MAAA,KAAK,EAAED,IAFX;AAGI,MAAA,cAAc,EAAEC,cAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CADJ,CAJJ,EAuBI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBJ,CADJ,CADJ;AA6BH;;AAlE6C","sourcesContent":["import React, { Component } from 'react';\nimport ShelfComponent from '../components/ShelfComponent';\nimport AddBookComponent from '../components/AddBookComponent';\nimport {getAll} from '../BooksAPI';\n\nexport default class LibraryView extends Component{\n    onHandleSearchChange = async evt => {\n        try{\n            const searchQuery = evt.target.value;\n            this.setState({\n                searchQuery\n            })\n            if(searchQuery.trim()){\n                const searchResult = await search(searchQuery);\n                if(searchResult.error){\n                    this.setState({ searchBooks: [] })\n                    return <h1>Sorry no books found</h1>\n                }else{\n                    this.setState({ searchBooks: searchResult })\n                }\n            }else{\n                this.setState({\n                    searchBooks: []\n                })\n            }\n            \n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    async componentDidMount(){\n        try {\n            const allBooks = await getAll();\n            this.props.updateAllBooks(allBooks)\n        } catch(error) {\n            console.error('issue with getting all books');\n        }\n    }\n\n    render(){\n        const { currentlyReading, wantToRead, read, changeCategory } = this.props\n        return(\n            <div>\n                <div className=\"list-books\">\n                    <div className=\"list-books-title\">\n                    <h1>MyReads</h1>\n                    </div>\n                    <div className=\"list-books-content\">\n                        <div>\n                            <ShelfComponent \n                                category=\"Currently Reading\"\n                                books={currentlyReading}\n                                changeCategory={changeCategory}\n                            />\n                            <ShelfComponent \n                                category=\"Want to Read\"\n                                books={wantToRead}\n                                changeCategory={changeCategory}\n                            />\n                            <ShelfComponent \n                                category=\"Read\"\n                                books={read}\n                                changeCategory={changeCategory}\n                            />\n                        </div>\n                    </div>\n                    <AddBookComponent />\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}