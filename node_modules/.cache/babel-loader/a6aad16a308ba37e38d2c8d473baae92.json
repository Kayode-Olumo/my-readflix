{"ast":null,"code":"var _jsxFileName = \"/Users/kayodeolumo/Desktop/readflix/src/App.js\";\nimport React, { Component } from 'react'; // import * as BooksAPI from './BooksAPI'\n\nimport { Switch, Route } from 'react-router-dom';\nimport Provider, { Context } from './providers/index';\nimport SearchView from './views/SearchView';\nimport LibraryView from './views/LibraryView';\nimport './App.css';\n\nclass BooksApp extends React.Component {\n  // state = {\n  //   /**\n  //    * TODO: Instead of using this state variable to keep track of which page\n  //    * we're on, use the URL in the browser's address bar. This will ensure that\n  //    * users can use the browser's back and forward buttons to navigate between\n  //    * pages, as well as provide a good URL they can bookmark and share.\n  //    */\n  //   showSearchPage: false,\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(Provider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: '/',\n      render: () => React.createElement(Context.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, context => React.createElement(LibraryView, Object.assign({}, context, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), \"/\"));\n  }\n\n}\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/kayodeolumo/Desktop/readflix/src/App.js"],"names":["React","Component","Switch","Route","Provider","Context","SearchView","LibraryView","BooksApp","render","context"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,MAAT,EAAgBC,KAAhB,QAA6B,kBAA7B;AACA,OAAOC,QAAP,IAAkBC,OAAlB,QAA+B,mBAA/B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAO,WAAP;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACC,SAA7B,CAAuC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAE,GAAnB;AAAwB,MAAA,MAAM,EAAE,MAChC,oBAAC,OAAD,CAAS,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,OAAO,IAAI,oBAAC,WAAD,oBAAiBA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADd,CADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,MANF,CADF;AAoBD;;AAhCoC;;AAmCvC,eAAeF,QAAf","sourcesContent":["import React, { Component } from 'react';\n// import * as BooksAPI from './BooksAPI'\nimport { Switch,Route } from 'react-router-dom';\nimport Provider, {Context}from './providers/index';\nimport SearchView from './views/SearchView';\nimport LibraryView from './views/LibraryView';\nimport './App.css';\n\nclass BooksApp extends React.Component {\n  // state = {\n  //   /**\n  //    * TODO: Instead of using this state variable to keep track of which page\n  //    * we're on, use the URL in the browser's address bar. This will ensure that\n  //    * users can use the browser's back and forward buttons to navigate between\n  //    * pages, as well as provide a good URL they can bookmark and share.\n  //    */\n  //   showSearchPage: false,\n  // }\n\n  render() {\n    return (\n      <div className=\"app\">\n        {/* {this.state.showSearchPage ? (\n          <SearchView />\n        ) : (\n          <LibraryView />\n        )} */}\n        <Provider>\n          <Switch>\n            {/* <Route exact path={'/'} component={LibraryView}></Route>\n            <Route exact path={'/search'} component={SearchView}></Route> */}\n            <Route exact path={'/'} render={() => (\n            <Context.Consumer>\n              {context => <LibraryView {...context} />}\n            </Context.Consumer> )}/>\n            {/* <Route exact path={'/search'} component={SearchView}></Route> */}\n          </Switch>\n        /</Provider>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}