{"ast":null,"code":"var _jsxFileName = \"/Users/kayodeolumo/Desktop/readflix/src/App.js\";\nimport React, { Component } from 'react'; // import * as BooksAPI from './BooksAPI'\n\nimport ShelfComponent from './components/Shelf';\nimport './App.css';\n\nclass BooksApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      /**\n       * TODO: Instead of using this state variable to keep track of which page\n       * we're on, use the URL in the browser's address bar. This will ensure that\n       * users can use the browser's back and forward buttons to navigate between\n       * pages, as well as provide a good URL they can bookmark and share.\n       */\n      showSearchPage: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.state.showSearchPage ? React.createElement(\"div\", {\n      className: \"search-books\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search-books-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"close-search\",\n      onClick: () => this.setState({\n        showSearchPage: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Close\"), React.createElement(\"div\", {\n      className: \"search-books-input-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by title or author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"search-books-results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      className: \"books-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      className: \"list-books\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-books-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"MyReads\")), React.createElement(\"div\", {\n      className: \"list-books-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Shelves go here\")), React.createElement(\"div\", {\n      className: \"open-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.setState({\n        showSearchPage: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Add a book\"))));\n  }\n\n}\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/kayodeolumo/Desktop/readflix/src/App.js"],"names":["React","Component","ShelfComponent","BooksApp","state","showSearchPage","render","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAO,WAAP;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACC,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCG,KADqC,GAC7B;AACN;;;;;;AAMAC,MAAAA,cAAc,EAAE;AAPV,KAD6B;AAAA;;AAWrCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWC,cAAX,GACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAE,MAAM,KAAKE,QAAL,CAAc;AAAEF,QAAAA,cAAc,EAAE;AAAlB,OAAd,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,2BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CAFF,CADF,EAgBE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhBF,CADD,GAsBC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAJF,EASE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKE,QAAL,CAAc;AAAEF,QAAAA,cAAc,EAAE;AAAlB,OAAd,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CATF,CAvBJ,CADF;AAwCD;;AApDoC;;AAuDvC,eAAeF,QAAf","sourcesContent":["import React, { Component } from 'react';\n// import * as BooksAPI from './BooksAPI'\nimport ShelfComponent from './components/Shelf';\nimport './App.css';\n\nclass BooksApp extends React.Component {\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    showSearchPage: false\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        {this.state.showSearchPage ? (\n          <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button>\n              <div className=\"search-books-input-wrapper\">\n                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                <input type=\"text\" placeholder=\"Search by title or author\"/>\n\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\"></ol>\n            </div>\n          </div>\n        ) : (\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n                Shelves go here\n              </div>\n            </div>\n            <div className=\"open-search\">\n              <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}